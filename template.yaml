AWSTemplateFormatVersion: 2010-09-09
Description: Shared resources for different todos applications
Transform:
- AWS::Serverless-2016-10-31

Parameters:
  GoogleClientId:
    Type: String
    Description: Google Client ID
  GoogleClientSecret:
    Type: String
    Description: Google Client Secret
  CognitoDomain:
    Type: String
    Description: Cognito Domain

Resources:
  ## Cognito Resources
  TodosUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: todos-user-pool
      AccountRecoverySetting:
        RecoveryMechanisms:
          - Name: admin_only
            Priority: 1
      AutoVerifiedAttributes:
        - email
      MfaConfiguration: "OFF"
      Schema:
        - AttributeDataType: String
          Name: email
          Required: false
      UsernameAttributes:
        - email
      UserPoolTags:
        Project: todos
  
  TodosUserPoolGoogleIdp:
    Type: AWS::Cognito::UserPoolIdentityProvider
    Properties:
      ProviderName: Google
      ProviderType: Google
      UserPoolId: !Ref TodosUserPool
      AttributeMapping:
        email: email
        username: sub
        family_name: family_name
        given_name: given_name
        locale: locale
        name: name
      ProviderDetails:
        client_id: !Ref GoogleClientId
        client_secret: !Ref GoogleClientSecret
        authorize_scopes: "email openid profile"
  
  TodosUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: web-app
      UserPoolId: !Ref TodosUserPool
      GenerateSecret: false
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthFlows:
        - code
      AllowedOAuthScopes:
        - email
        - openid
        - profile
      CallbackURLs:
        - http://localhost:4200/ # This is the default callback URL for the Angular CLI
      LogoutURLs:
        - http://localhost:4200/
      ExplicitAuthFlows:
        - ALLOW_USER_SRP_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
      PreventUserExistenceErrors: ENABLED
      SupportedIdentityProviders:
        - !Ref TodosUserPoolGoogleIdp
  
  TodosUserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      Domain: mistermiros-todos
      UserPoolId: !Ref TodosUserPool
      
  TodosUserPoolSSMParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /todos/user-pool-id
      Type: String
      Value: !Ref TodosUserPool
      Tags:
        Project: todos

  TodosUserPoolClientSSMParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /todos/user-pool-client-id
      Type: String
      Value: !Ref TodosUserPoolClient
      Tags:
        Project: todos
  
  ## DynamoDB Resources
  TodosTodoTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: todos-TodoTable
      AttributeDefinitions:
        - AttributeName: user_email
          AttributeType: S
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: user_email
          KeyType: HASH
        - AttributeName: id
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
      Tags:
        - Key: Project
          Value: todos
  
  TodosTodoTableSSMParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /todos/todo-table-name
      Type: String
      Value: !Ref TodosTodoTable
      Tags:
        Project: todos
  
  ## Lambda permissions Resources
  TodosDynamoDbCrudPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: todos-dynamodb-crud-policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - dynamodb:DeleteItem
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:UpdateItem
            Resource: !GetAtt TodosTodoTable.Arn

  TodosLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: todos-lambda-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - !Ref TodosDynamoDbCrudPolicy
      Tags:
        - Key: Project
          Value: todos
  
  TodosLambdaRoleSSMParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /todos/lambda-role-arn
      Type: String
      Value: !GetAtt TodosLambdaRole.Arn
      Tags:
        Project: todos